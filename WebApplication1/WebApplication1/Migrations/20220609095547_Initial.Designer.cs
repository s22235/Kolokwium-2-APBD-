// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20220609095547_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("WebApplication1.Models.Album", b =>
                {
                    b.Property<int>("idAlbum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("albumName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("idMusicLabel")
                        .HasColumnType("int");

                    b.Property<DateTime>("publishDate")
                        .HasColumnType("datetime2");

                    b.HasKey("idAlbum");

                    b.HasIndex("idMusicLabel");

                    b.ToTable("Medicaments");

                    b.HasData(
                        new
                        {
                            idAlbum = 1,
                            albumName = "Album 1",
                            idMusicLabel = 1,
                            publishDate = new DateTime(2011, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            idAlbum = 2,
                            albumName = "Album 2",
                            idMusicLabel = 2,
                            publishDate = new DateTime(2011, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            idAlbum = 3,
                            albumName = "Album 3",
                            idMusicLabel = 3,
                            publishDate = new DateTime(2011, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.MusicLabel", b =>
                {
                    b.Property<int>("idMusicLabel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idMusicLabel");

                    b.ToTable("MusicLabels");

                    b.HasData(
                        new
                        {
                            idMusicLabel = 1,
                            name = "Label 1"
                        },
                        new
                        {
                            idMusicLabel = 2,
                            name = "Label 2"
                        },
                        new
                        {
                            idMusicLabel = 3,
                            name = "Label 3"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Musician", b =>
                {
                    b.Property<int>("idMusician")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nickName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("idMusician");

                    b.ToTable("Musicians");

                    b.HasData(
                        new
                        {
                            idMusician = 1,
                            firstName = "Andrzej",
                            lastName = "Lisenkov",
                            nickName = "Monster1"
                        },
                        new
                        {
                            idMusician = 2,
                            firstName = "Ryszard",
                            lastName = "Warzocha",
                            nickName = "Monster2"
                        },
                        new
                        {
                            idMusician = 3,
                            firstName = "Konrad",
                            lastName = "Wal",
                            nickName = "Monster3"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Musician_Track", b =>
                {
                    b.Property<int>("idMusician")
                        .HasColumnType("int");

                    b.Property<int>("idTrack")
                        .HasColumnType("int");

                    b.HasKey("idMusician", "idTrack");

                    b.HasIndex("idTrack");

                    b.ToTable("Musician_Tracks");

                    b.HasData(
                        new
                        {
                            idMusician = 1,
                            idTrack = 1
                        },
                        new
                        {
                            idMusician = 2,
                            idTrack = 2
                        },
                        new
                        {
                            idMusician = 3,
                            idTrack = 3
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Track", b =>
                {
                    b.Property<int>("idTrack")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("duration")
                        .HasColumnType("real");

                    b.Property<int>("idMusicAlbum")
                        .HasColumnType("int");

                    b.Property<string>("trackName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("idTrack");

                    b.HasIndex("idMusicAlbum");

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            idTrack = 1,
                            duration = 5f,
                            idMusicAlbum = 1,
                            trackName = "track 1"
                        },
                        new
                        {
                            idTrack = 2,
                            duration = 6f,
                            idMusicAlbum = 2,
                            trackName = "track 2"
                        },
                        new
                        {
                            idTrack = 3,
                            duration = 7f,
                            idMusicAlbum = 3,
                            trackName = "track 3"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Album", b =>
                {
                    b.HasOne("WebApplication1.Models.MusicLabel", "musicLabel")
                        .WithMany("albums")
                        .HasForeignKey("idMusicLabel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("musicLabel");
                });

            modelBuilder.Entity("WebApplication1.Models.Musician_Track", b =>
                {
                    b.HasOne("WebApplication1.Models.Musician", "musician")
                        .WithMany("musician_Tracks")
                        .HasForeignKey("idMusician")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Track", "track")
                        .WithMany("musician_Tracks")
                        .HasForeignKey("idTrack")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("musician");

                    b.Navigation("track");
                });

            modelBuilder.Entity("WebApplication1.Models.Track", b =>
                {
                    b.HasOne("WebApplication1.Models.Album", "album")
                        .WithMany("tracks")
                        .HasForeignKey("idMusicAlbum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("album");
                });

            modelBuilder.Entity("WebApplication1.Models.Album", b =>
                {
                    b.Navigation("tracks");
                });

            modelBuilder.Entity("WebApplication1.Models.MusicLabel", b =>
                {
                    b.Navigation("albums");
                });

            modelBuilder.Entity("WebApplication1.Models.Musician", b =>
                {
                    b.Navigation("musician_Tracks");
                });

            modelBuilder.Entity("WebApplication1.Models.Track", b =>
                {
                    b.Navigation("musician_Tracks");
                });
#pragma warning restore 612, 618
        }
    }
}
